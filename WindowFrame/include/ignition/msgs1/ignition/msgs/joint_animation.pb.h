// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ignition/msgs/joint_animation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ignition_2fmsgs_2fjoint_5fanimation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ignition_2fmsgs_2fjoint_5fanimation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ignition/msgs/time.pb.h"
#include "ignition/msgs/header.pb.h"
#ifndef _MSC_VER
#pragma GCC system_header
#else
#pragma warning(push)
#pragma warning(disable: 4244 4267 4100 4244 4512 4127 4068 4275 4251)
#endif
#include <memory>
#include <ignition/msgs/Export.hh>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ignition_2fmsgs_2fjoint_5fanimation_2eproto IGNITION_MSGS_VISIBLE
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct IGNITION_MSGS_VISIBLE TableStruct_ignition_2fmsgs_2fjoint_5fanimation_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern IGNITION_MSGS_VISIBLE const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ignition_2fmsgs_2fjoint_5fanimation_2eproto;
namespace ignition {
namespace msgs {
class JointAnimation;
class JointAnimationDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern JointAnimationDefaultTypeInternal _JointAnimation_default_instance_;
class JointAnimation_Joint;
class JointAnimation_JointDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern JointAnimation_JointDefaultTypeInternal _JointAnimation_Joint_default_instance_;
}  // namespace msgs
}  // namespace ignition
PROTOBUF_NAMESPACE_OPEN
template<> IGNITION_MSGS_VISIBLE ::ignition::msgs::JointAnimation* Arena::CreateMaybeMessage<::ignition::msgs::JointAnimation>(Arena*);
template<> IGNITION_MSGS_VISIBLE ::ignition::msgs::JointAnimation_Joint* Arena::CreateMaybeMessage<::ignition::msgs::JointAnimation_Joint>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ignition {
namespace msgs {

// ===================================================================

class IGNITION_MSGS_VISIBLE JointAnimation_Joint :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ignition.msgs.JointAnimation.Joint) */ {
 public:
  JointAnimation_Joint();
  virtual ~JointAnimation_Joint();

  JointAnimation_Joint(const JointAnimation_Joint& from);
  JointAnimation_Joint(JointAnimation_Joint&& from) noexcept
    : JointAnimation_Joint() {
    *this = ::std::move(from);
  }

  inline JointAnimation_Joint& operator=(const JointAnimation_Joint& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointAnimation_Joint& operator=(JointAnimation_Joint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JointAnimation_Joint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JointAnimation_Joint* internal_default_instance() {
    return reinterpret_cast<const JointAnimation_Joint*>(
               &_JointAnimation_Joint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(JointAnimation_Joint& a, JointAnimation_Joint& b) {
    a.Swap(&b);
  }
  inline void Swap(JointAnimation_Joint* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JointAnimation_Joint* New() const final {
    return CreateMaybeMessage<JointAnimation_Joint>(nullptr);
  }

  JointAnimation_Joint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JointAnimation_Joint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JointAnimation_Joint& from);
  void MergeFrom(const JointAnimation_Joint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointAnimation_Joint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ignition.msgs.JointAnimation.Joint";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ignition_2fmsgs_2fjoint_5fanimation_2eproto);
    return ::descriptor_table_ignition_2fmsgs_2fjoint_5fanimation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kAngleFieldNumber = 2,
  };
  // repeated string name = 1;
  int name_size() const;
  void clear_name();
  const std::string& name(int index) const;
  std::string* mutable_name(int index);
  void set_name(int index, const std::string& value);
  void set_name(int index, std::string&& value);
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  std::string* add_name();
  void add_name(const std::string& value);
  void add_name(std::string&& value);
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_name();

  // repeated double angle = 2;
  int angle_size() const;
  void clear_angle();
  double angle(int index) const;
  void set_angle(int index, double value);
  void add_angle(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      angle() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_angle();

  // @@protoc_insertion_point(class_scope:ignition.msgs.JointAnimation.Joint)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> name_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > angle_;
  friend struct ::TableStruct_ignition_2fmsgs_2fjoint_5fanimation_2eproto;
};
// -------------------------------------------------------------------

class IGNITION_MSGS_VISIBLE JointAnimation :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ignition.msgs.JointAnimation) */ {
 public:
  JointAnimation();
  virtual ~JointAnimation();

  JointAnimation(const JointAnimation& from);
  JointAnimation(JointAnimation&& from) noexcept
    : JointAnimation() {
    *this = ::std::move(from);
  }

  inline JointAnimation& operator=(const JointAnimation& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointAnimation& operator=(JointAnimation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JointAnimation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JointAnimation* internal_default_instance() {
    return reinterpret_cast<const JointAnimation*>(
               &_JointAnimation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(JointAnimation& a, JointAnimation& b) {
    a.Swap(&b);
  }
  inline void Swap(JointAnimation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JointAnimation* New() const final {
    return CreateMaybeMessage<JointAnimation>(nullptr);
  }

  JointAnimation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JointAnimation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JointAnimation& from);
  void MergeFrom(const JointAnimation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointAnimation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ignition.msgs.JointAnimation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ignition_2fmsgs_2fjoint_5fanimation_2eproto);
    return ::descriptor_table_ignition_2fmsgs_2fjoint_5fanimation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef JointAnimation_Joint Joint;

  // accessors -------------------------------------------------------

  enum : int {
    kJointFieldNumber = 3,
    kTimeFieldNumber = 4,
    kModelNameFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .ignition.msgs.JointAnimation.Joint joint = 3;
  int joint_size() const;
  void clear_joint();
  ::ignition::msgs::JointAnimation_Joint* mutable_joint(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >*
      mutable_joint();
  const ::ignition::msgs::JointAnimation_Joint& joint(int index) const;
  ::ignition::msgs::JointAnimation_Joint* add_joint();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >&
      joint() const;

  // repeated .ignition.msgs.Time time = 4;
  int time_size() const;
  void clear_time();
  ::ignition::msgs::Time* mutable_time(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::Time >*
      mutable_time();
  const ::ignition::msgs::Time& time(int index) const;
  ::ignition::msgs::Time* add_time();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::Time >&
      time() const;

  // optional string model_name = 2;
  bool has_model_name() const;
  void clear_model_name();
  const std::string& model_name() const;
  void set_model_name(const std::string& value);
  void set_model_name(std::string&& value);
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  std::string* mutable_model_name();
  std::string* release_model_name();
  void set_allocated_model_name(std::string* model_name);

  // optional .ignition.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  const ::ignition::msgs::Header& header() const;
  ::ignition::msgs::Header* release_header();
  ::ignition::msgs::Header* mutable_header();
  void set_allocated_header(::ignition::msgs::Header* header);

  // @@protoc_insertion_point(class_scope:ignition.msgs.JointAnimation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint > joint_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::Time > time_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_name_;
  ::ignition::msgs::Header* header_;
  friend struct ::TableStruct_ignition_2fmsgs_2fjoint_5fanimation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JointAnimation_Joint

// repeated string name = 1;
inline int JointAnimation_Joint::name_size() const {
  return name_.size();
}
inline void JointAnimation_Joint::clear_name() {
  name_.Clear();
}
inline const std::string& JointAnimation_Joint::name(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.Joint.name)
  return name_.Get(index);
}
inline std::string* JointAnimation_Joint::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.Joint.name)
  return name_.Mutable(index);
}
inline void JointAnimation_Joint::set_name(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.Joint.name)
  name_.Mutable(index)->assign(value);
}
inline void JointAnimation_Joint::set_name(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.Joint.name)
  name_.Mutable(index)->assign(std::move(value));
}
inline void JointAnimation_Joint::set_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ignition.msgs.JointAnimation.Joint.name)
}
inline std::string* JointAnimation_Joint::add_name() {
  // @@protoc_insertion_point(field_add_mutable:ignition.msgs.JointAnimation.Joint.name)
  return name_.Add();
}
inline void JointAnimation_Joint::add_name(const std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::add_name(std::string&& value) {
  name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::add_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ignition.msgs.JointAnimation.Joint.name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JointAnimation_Joint::name() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.Joint.name)
  return name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JointAnimation_Joint::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.Joint.name)
  return &name_;
}

// repeated double angle = 2;
inline int JointAnimation_Joint::angle_size() const {
  return angle_.size();
}
inline void JointAnimation_Joint::clear_angle() {
  angle_.Clear();
}
inline double JointAnimation_Joint::angle(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.Joint.angle)
  return angle_.Get(index);
}
inline void JointAnimation_Joint::set_angle(int index, double value) {
  angle_.Set(index, value);
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.Joint.angle)
}
inline void JointAnimation_Joint::add_angle(double value) {
  angle_.Add(value);
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.Joint.angle)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointAnimation_Joint::angle() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.Joint.angle)
  return angle_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointAnimation_Joint::mutable_angle() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.Joint.angle)
  return &angle_;
}

// -------------------------------------------------------------------

// JointAnimation

// optional .ignition.msgs.Header header = 1;
inline bool JointAnimation::has_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::ignition::msgs::Header& JointAnimation::header() const {
  const ::ignition::msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.header)
  return p != nullptr ? *p : *reinterpret_cast<const ::ignition::msgs::Header*>(
      &::ignition::msgs::_Header_default_instance_);
}
inline ::ignition::msgs::Header* JointAnimation::release_header() {
  // @@protoc_insertion_point(field_release:ignition.msgs.JointAnimation.header)
  _has_bits_[0] &= ~0x00000002u;
  ::ignition::msgs::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::ignition::msgs::Header* JointAnimation::mutable_header() {
  _has_bits_[0] |= 0x00000002u;
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::ignition::msgs::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.header)
  return header_;
}
inline void JointAnimation::set_allocated_header(::ignition::msgs::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:ignition.msgs.JointAnimation.header)
}

// optional string model_name = 2;
inline bool JointAnimation::has_model_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JointAnimation::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JointAnimation::model_name() const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.model_name)
  return model_name_.GetNoArena();
}
inline void JointAnimation::set_model_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  model_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.model_name)
}
inline void JointAnimation::set_model_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  model_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ignition.msgs.JointAnimation.model_name)
}
inline void JointAnimation::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  model_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ignition.msgs.JointAnimation.model_name)
}
inline void JointAnimation::set_model_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  model_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ignition.msgs.JointAnimation.model_name)
}
inline std::string* JointAnimation::mutable_model_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.model_name)
  return model_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* JointAnimation::release_model_name() {
  // @@protoc_insertion_point(field_release:ignition.msgs.JointAnimation.model_name)
  if (!has_model_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return model_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void JointAnimation::set_allocated_model_name(std::string* model_name) {
  if (model_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  model_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:ignition.msgs.JointAnimation.model_name)
}

// repeated .ignition.msgs.JointAnimation.Joint joint = 3;
inline int JointAnimation::joint_size() const {
  return joint_.size();
}
inline void JointAnimation::clear_joint() {
  joint_.Clear();
}
inline ::ignition::msgs::JointAnimation_Joint* JointAnimation::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.joint)
  return joint_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >*
JointAnimation::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.joint)
  return &joint_;
}
inline const ::ignition::msgs::JointAnimation_Joint& JointAnimation::joint(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.joint)
  return joint_.Get(index);
}
inline ::ignition::msgs::JointAnimation_Joint* JointAnimation::add_joint() {
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.joint)
  return joint_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >&
JointAnimation::joint() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.joint)
  return joint_;
}

// repeated .ignition.msgs.Time time = 4;
inline int JointAnimation::time_size() const {
  return time_.size();
}
inline ::ignition::msgs::Time* JointAnimation::mutable_time(int index) {
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.time)
  return time_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::Time >*
JointAnimation::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.time)
  return &time_;
}
inline const ::ignition::msgs::Time& JointAnimation::time(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.time)
  return time_.Get(index);
}
inline ::ignition::msgs::Time* JointAnimation::add_time() {
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.time)
  return time_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ignition::msgs::Time >&
JointAnimation::time() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.time)
  return time_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


typedef std::unique_ptr<JointAnimation> JointAnimationUniquePtr;
typedef std::unique_ptr<const JointAnimation> ConstJointAnimationUniquePtr;
typedef std::shared_ptr<JointAnimation> JointAnimationSharedPtr;
typedef std::shared_ptr<const JointAnimation> ConstJointAnimationSharedPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace ignition

#ifdef _MSC_VER
#pragma warning(pop)
#endif
// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ignition_2fmsgs_2fjoint_5fanimation_2eproto
