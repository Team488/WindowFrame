#ifndef _H_5F4CBA7BA658AE9F94EB7A533816544A_Arrays__H_
#define _H_5F4CBA7BA658AE9F94EB7A533816544A_Arrays__H_

#include "sacpp_mapping.h"
#include "cpp_dcps_if.h"
#include "test_msgs/msg/dds_opensplice/BasicTypes_.h"
#include "test_msgs/msg/dds_opensplice/Constants_.h"
#include "test_msgs/msg/dds_opensplice/Defaults_.h"
#include "test_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"

namespace test_msgs
{
    namespace msg
    {
        namespace dds_
        {
            struct ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_test_msgs Arrays_
            {
                struct _bool_values__uniq_{};
                typedef ::DDS::Boolean _bool_values__slice;
                typedef ::DDS::Boolean _bool_values_[3];
                typedef DDS_DCPS_FArray_var< _bool_values_, _bool_values__slice, struct _bool_values__uniq_ > _bool_values__var;
                typedef _bool_values_ _bool_values__out;
                typedef DDS_DCPS_Array_forany< _bool_values_, _bool_values__slice, struct _bool_values__uniq_ > _bool_values__forany;
                static _bool_values__slice *_bool_values__alloc();
                static void _bool_values__free(_bool_values__slice *);
                static void _bool_values__copy(_bool_values__slice *to, const _bool_values__slice *from);
                static _bool_values__slice *_bool_values__dup(const _bool_values__slice *from);
                struct _byte_values__uniq_{};
                typedef ::DDS::Octet _byte_values__slice;
                typedef ::DDS::Octet _byte_values_[3];
                typedef DDS_DCPS_FArray_var< _byte_values_, _byte_values__slice, struct _byte_values__uniq_ > _byte_values__var;
                typedef _byte_values_ _byte_values__out;
                typedef DDS_DCPS_Array_forany< _byte_values_, _byte_values__slice, struct _byte_values__uniq_ > _byte_values__forany;
                static _byte_values__slice *_byte_values__alloc();
                static void _byte_values__free(_byte_values__slice *);
                static void _byte_values__copy(_byte_values__slice *to, const _byte_values__slice *from);
                static _byte_values__slice *_byte_values__dup(const _byte_values__slice *from);
                struct _char_values__uniq_{};
                typedef ::DDS::Octet _char_values__slice;
                typedef ::DDS::Octet _char_values_[3];
                typedef DDS_DCPS_FArray_var< _char_values_, _char_values__slice, struct _char_values__uniq_ > _char_values__var;
                typedef _char_values_ _char_values__out;
                typedef DDS_DCPS_Array_forany< _char_values_, _char_values__slice, struct _char_values__uniq_ > _char_values__forany;
                static _char_values__slice *_char_values__alloc();
                static void _char_values__free(_char_values__slice *);
                static void _char_values__copy(_char_values__slice *to, const _char_values__slice *from);
                static _char_values__slice *_char_values__dup(const _char_values__slice *from);
                struct _float32_values__uniq_{};
                typedef ::DDS::Float _float32_values__slice;
                typedef ::DDS::Float _float32_values_[3];
                typedef DDS_DCPS_FArray_var< _float32_values_, _float32_values__slice, struct _float32_values__uniq_ > _float32_values__var;
                typedef _float32_values_ _float32_values__out;
                typedef DDS_DCPS_Array_forany< _float32_values_, _float32_values__slice, struct _float32_values__uniq_ > _float32_values__forany;
                static _float32_values__slice *_float32_values__alloc();
                static void _float32_values__free(_float32_values__slice *);
                static void _float32_values__copy(_float32_values__slice *to, const _float32_values__slice *from);
                static _float32_values__slice *_float32_values__dup(const _float32_values__slice *from);
                struct _float64_values__uniq_{};
                typedef ::DDS::Double _float64_values__slice;
                typedef ::DDS::Double _float64_values_[3];
                typedef DDS_DCPS_FArray_var< _float64_values_, _float64_values__slice, struct _float64_values__uniq_ > _float64_values__var;
                typedef _float64_values_ _float64_values__out;
                typedef DDS_DCPS_Array_forany< _float64_values_, _float64_values__slice, struct _float64_values__uniq_ > _float64_values__forany;
                static _float64_values__slice *_float64_values__alloc();
                static void _float64_values__free(_float64_values__slice *);
                static void _float64_values__copy(_float64_values__slice *to, const _float64_values__slice *from);
                static _float64_values__slice *_float64_values__dup(const _float64_values__slice *from);
                struct _int8_values__uniq_{};
                typedef ::DDS::Octet _int8_values__slice;
                typedef ::DDS::Octet _int8_values_[3];
                typedef DDS_DCPS_FArray_var< _int8_values_, _int8_values__slice, struct _int8_values__uniq_ > _int8_values__var;
                typedef _int8_values_ _int8_values__out;
                typedef DDS_DCPS_Array_forany< _int8_values_, _int8_values__slice, struct _int8_values__uniq_ > _int8_values__forany;
                static _int8_values__slice *_int8_values__alloc();
                static void _int8_values__free(_int8_values__slice *);
                static void _int8_values__copy(_int8_values__slice *to, const _int8_values__slice *from);
                static _int8_values__slice *_int8_values__dup(const _int8_values__slice *from);
                struct _uint8_values__uniq_{};
                typedef ::DDS::Octet _uint8_values__slice;
                typedef ::DDS::Octet _uint8_values_[3];
                typedef DDS_DCPS_FArray_var< _uint8_values_, _uint8_values__slice, struct _uint8_values__uniq_ > _uint8_values__var;
                typedef _uint8_values_ _uint8_values__out;
                typedef DDS_DCPS_Array_forany< _uint8_values_, _uint8_values__slice, struct _uint8_values__uniq_ > _uint8_values__forany;
                static _uint8_values__slice *_uint8_values__alloc();
                static void _uint8_values__free(_uint8_values__slice *);
                static void _uint8_values__copy(_uint8_values__slice *to, const _uint8_values__slice *from);
                static _uint8_values__slice *_uint8_values__dup(const _uint8_values__slice *from);
                struct _int16_values__uniq_{};
                typedef ::DDS::Short _int16_values__slice;
                typedef ::DDS::Short _int16_values_[3];
                typedef DDS_DCPS_FArray_var< _int16_values_, _int16_values__slice, struct _int16_values__uniq_ > _int16_values__var;
                typedef _int16_values_ _int16_values__out;
                typedef DDS_DCPS_Array_forany< _int16_values_, _int16_values__slice, struct _int16_values__uniq_ > _int16_values__forany;
                static _int16_values__slice *_int16_values__alloc();
                static void _int16_values__free(_int16_values__slice *);
                static void _int16_values__copy(_int16_values__slice *to, const _int16_values__slice *from);
                static _int16_values__slice *_int16_values__dup(const _int16_values__slice *from);
                struct _uint16_values__uniq_{};
                typedef ::DDS::UShort _uint16_values__slice;
                typedef ::DDS::UShort _uint16_values_[3];
                typedef DDS_DCPS_FArray_var< _uint16_values_, _uint16_values__slice, struct _uint16_values__uniq_ > _uint16_values__var;
                typedef _uint16_values_ _uint16_values__out;
                typedef DDS_DCPS_Array_forany< _uint16_values_, _uint16_values__slice, struct _uint16_values__uniq_ > _uint16_values__forany;
                static _uint16_values__slice *_uint16_values__alloc();
                static void _uint16_values__free(_uint16_values__slice *);
                static void _uint16_values__copy(_uint16_values__slice *to, const _uint16_values__slice *from);
                static _uint16_values__slice *_uint16_values__dup(const _uint16_values__slice *from);
                struct _int32_values__uniq_{};
                typedef ::DDS::Long _int32_values__slice;
                typedef ::DDS::Long _int32_values_[3];
                typedef DDS_DCPS_FArray_var< _int32_values_, _int32_values__slice, struct _int32_values__uniq_ > _int32_values__var;
                typedef _int32_values_ _int32_values__out;
                typedef DDS_DCPS_Array_forany< _int32_values_, _int32_values__slice, struct _int32_values__uniq_ > _int32_values__forany;
                static _int32_values__slice *_int32_values__alloc();
                static void _int32_values__free(_int32_values__slice *);
                static void _int32_values__copy(_int32_values__slice *to, const _int32_values__slice *from);
                static _int32_values__slice *_int32_values__dup(const _int32_values__slice *from);
                struct _uint32_values__uniq_{};
                typedef ::DDS::ULong _uint32_values__slice;
                typedef ::DDS::ULong _uint32_values_[3];
                typedef DDS_DCPS_FArray_var< _uint32_values_, _uint32_values__slice, struct _uint32_values__uniq_ > _uint32_values__var;
                typedef _uint32_values_ _uint32_values__out;
                typedef DDS_DCPS_Array_forany< _uint32_values_, _uint32_values__slice, struct _uint32_values__uniq_ > _uint32_values__forany;
                static _uint32_values__slice *_uint32_values__alloc();
                static void _uint32_values__free(_uint32_values__slice *);
                static void _uint32_values__copy(_uint32_values__slice *to, const _uint32_values__slice *from);
                static _uint32_values__slice *_uint32_values__dup(const _uint32_values__slice *from);
                struct _int64_values__uniq_{};
                typedef ::DDS::LongLong _int64_values__slice;
                typedef ::DDS::LongLong _int64_values_[3];
                typedef DDS_DCPS_FArray_var< _int64_values_, _int64_values__slice, struct _int64_values__uniq_ > _int64_values__var;
                typedef _int64_values_ _int64_values__out;
                typedef DDS_DCPS_Array_forany< _int64_values_, _int64_values__slice, struct _int64_values__uniq_ > _int64_values__forany;
                static _int64_values__slice *_int64_values__alloc();
                static void _int64_values__free(_int64_values__slice *);
                static void _int64_values__copy(_int64_values__slice *to, const _int64_values__slice *from);
                static _int64_values__slice *_int64_values__dup(const _int64_values__slice *from);
                struct _uint64_values__uniq_{};
                typedef ::DDS::ULongLong _uint64_values__slice;
                typedef ::DDS::ULongLong _uint64_values_[3];
                typedef DDS_DCPS_FArray_var< _uint64_values_, _uint64_values__slice, struct _uint64_values__uniq_ > _uint64_values__var;
                typedef _uint64_values_ _uint64_values__out;
                typedef DDS_DCPS_Array_forany< _uint64_values_, _uint64_values__slice, struct _uint64_values__uniq_ > _uint64_values__forany;
                static _uint64_values__slice *_uint64_values__alloc();
                static void _uint64_values__free(_uint64_values__slice *);
                static void _uint64_values__copy(_uint64_values__slice *to, const _uint64_values__slice *from);
                static _uint64_values__slice *_uint64_values__dup(const _uint64_values__slice *from);
                struct _string_values__uniq_{};
                typedef ::DDS::String_mgr _string_values__slice;
                typedef ::DDS::String_mgr _string_values_[3];
                typedef DDS_DCPS_VArray_var< _string_values_, _string_values__slice, struct _string_values__uniq_ > _string_values__var;
                typedef DDS_DCPS_VLArray_out< _string_values_, _string_values__slice, _string_values__var, struct _string_values__uniq_ > _string_values__out;
                typedef DDS_DCPS_Array_forany< _string_values_, _string_values__slice, struct _string_values__uniq_ > _string_values__forany;
                static _string_values__slice *_string_values__alloc();
                static void _string_values__free(_string_values__slice *);
                static void _string_values__copy(_string_values__slice *to, const _string_values__slice *from);
                static _string_values__slice *_string_values__dup(const _string_values__slice *from);
                struct _basic_types_values__uniq_{};
                typedef ::test_msgs::msg::dds_::BasicTypes_ _basic_types_values__slice;
                typedef ::test_msgs::msg::dds_::BasicTypes_ _basic_types_values_[3];
                typedef DDS_DCPS_FArray_var< _basic_types_values_, _basic_types_values__slice, struct _basic_types_values__uniq_ > _basic_types_values__var;
                typedef _basic_types_values_ _basic_types_values__out;
                typedef DDS_DCPS_Array_forany< _basic_types_values_, _basic_types_values__slice, struct _basic_types_values__uniq_ > _basic_types_values__forany;
                static _basic_types_values__slice *_basic_types_values__alloc();
                static void _basic_types_values__free(_basic_types_values__slice *);
                static void _basic_types_values__copy(_basic_types_values__slice *to, const _basic_types_values__slice *from);
                static _basic_types_values__slice *_basic_types_values__dup(const _basic_types_values__slice *from);
                struct _constants_values__uniq_{};
                typedef ::test_msgs::msg::dds_::Constants_ _constants_values__slice;
                typedef ::test_msgs::msg::dds_::Constants_ _constants_values_[3];
                typedef DDS_DCPS_FArray_var< _constants_values_, _constants_values__slice, struct _constants_values__uniq_ > _constants_values__var;
                typedef _constants_values_ _constants_values__out;
                typedef DDS_DCPS_Array_forany< _constants_values_, _constants_values__slice, struct _constants_values__uniq_ > _constants_values__forany;
                static _constants_values__slice *_constants_values__alloc();
                static void _constants_values__free(_constants_values__slice *);
                static void _constants_values__copy(_constants_values__slice *to, const _constants_values__slice *from);
                static _constants_values__slice *_constants_values__dup(const _constants_values__slice *from);
                struct _defaults_values__uniq_{};
                typedef ::test_msgs::msg::dds_::Defaults_ _defaults_values__slice;
                typedef ::test_msgs::msg::dds_::Defaults_ _defaults_values_[3];
                typedef DDS_DCPS_FArray_var< _defaults_values_, _defaults_values__slice, struct _defaults_values__uniq_ > _defaults_values__var;
                typedef _defaults_values_ _defaults_values__out;
                typedef DDS_DCPS_Array_forany< _defaults_values_, _defaults_values__slice, struct _defaults_values__uniq_ > _defaults_values__forany;
                static _defaults_values__slice *_defaults_values__alloc();
                static void _defaults_values__free(_defaults_values__slice *);
                static void _defaults_values__copy(_defaults_values__slice *to, const _defaults_values__slice *from);
                static _defaults_values__slice *_defaults_values__dup(const _defaults_values__slice *from);
                struct _bool_values_default__uniq_{};
                typedef ::DDS::Boolean _bool_values_default__slice;
                typedef ::DDS::Boolean _bool_values_default_[3];
                typedef DDS_DCPS_FArray_var< _bool_values_default_, _bool_values_default__slice, struct _bool_values_default__uniq_ > _bool_values_default__var;
                typedef _bool_values_default_ _bool_values_default__out;
                typedef DDS_DCPS_Array_forany< _bool_values_default_, _bool_values_default__slice, struct _bool_values_default__uniq_ > _bool_values_default__forany;
                static _bool_values_default__slice *_bool_values_default__alloc();
                static void _bool_values_default__free(_bool_values_default__slice *);
                static void _bool_values_default__copy(_bool_values_default__slice *to, const _bool_values_default__slice *from);
                static _bool_values_default__slice *_bool_values_default__dup(const _bool_values_default__slice *from);
                struct _byte_values_default__uniq_{};
                typedef ::DDS::Octet _byte_values_default__slice;
                typedef ::DDS::Octet _byte_values_default_[3];
                typedef DDS_DCPS_FArray_var< _byte_values_default_, _byte_values_default__slice, struct _byte_values_default__uniq_ > _byte_values_default__var;
                typedef _byte_values_default_ _byte_values_default__out;
                typedef DDS_DCPS_Array_forany< _byte_values_default_, _byte_values_default__slice, struct _byte_values_default__uniq_ > _byte_values_default__forany;
                static _byte_values_default__slice *_byte_values_default__alloc();
                static void _byte_values_default__free(_byte_values_default__slice *);
                static void _byte_values_default__copy(_byte_values_default__slice *to, const _byte_values_default__slice *from);
                static _byte_values_default__slice *_byte_values_default__dup(const _byte_values_default__slice *from);
                struct _char_values_default__uniq_{};
                typedef ::DDS::Octet _char_values_default__slice;
                typedef ::DDS::Octet _char_values_default_[3];
                typedef DDS_DCPS_FArray_var< _char_values_default_, _char_values_default__slice, struct _char_values_default__uniq_ > _char_values_default__var;
                typedef _char_values_default_ _char_values_default__out;
                typedef DDS_DCPS_Array_forany< _char_values_default_, _char_values_default__slice, struct _char_values_default__uniq_ > _char_values_default__forany;
                static _char_values_default__slice *_char_values_default__alloc();
                static void _char_values_default__free(_char_values_default__slice *);
                static void _char_values_default__copy(_char_values_default__slice *to, const _char_values_default__slice *from);
                static _char_values_default__slice *_char_values_default__dup(const _char_values_default__slice *from);
                struct _float32_values_default__uniq_{};
                typedef ::DDS::Float _float32_values_default__slice;
                typedef ::DDS::Float _float32_values_default_[3];
                typedef DDS_DCPS_FArray_var< _float32_values_default_, _float32_values_default__slice, struct _float32_values_default__uniq_ > _float32_values_default__var;
                typedef _float32_values_default_ _float32_values_default__out;
                typedef DDS_DCPS_Array_forany< _float32_values_default_, _float32_values_default__slice, struct _float32_values_default__uniq_ > _float32_values_default__forany;
                static _float32_values_default__slice *_float32_values_default__alloc();
                static void _float32_values_default__free(_float32_values_default__slice *);
                static void _float32_values_default__copy(_float32_values_default__slice *to, const _float32_values_default__slice *from);
                static _float32_values_default__slice *_float32_values_default__dup(const _float32_values_default__slice *from);
                struct _float64_values_default__uniq_{};
                typedef ::DDS::Double _float64_values_default__slice;
                typedef ::DDS::Double _float64_values_default_[3];
                typedef DDS_DCPS_FArray_var< _float64_values_default_, _float64_values_default__slice, struct _float64_values_default__uniq_ > _float64_values_default__var;
                typedef _float64_values_default_ _float64_values_default__out;
                typedef DDS_DCPS_Array_forany< _float64_values_default_, _float64_values_default__slice, struct _float64_values_default__uniq_ > _float64_values_default__forany;
                static _float64_values_default__slice *_float64_values_default__alloc();
                static void _float64_values_default__free(_float64_values_default__slice *);
                static void _float64_values_default__copy(_float64_values_default__slice *to, const _float64_values_default__slice *from);
                static _float64_values_default__slice *_float64_values_default__dup(const _float64_values_default__slice *from);
                struct _int8_values_default__uniq_{};
                typedef ::DDS::Octet _int8_values_default__slice;
                typedef ::DDS::Octet _int8_values_default_[3];
                typedef DDS_DCPS_FArray_var< _int8_values_default_, _int8_values_default__slice, struct _int8_values_default__uniq_ > _int8_values_default__var;
                typedef _int8_values_default_ _int8_values_default__out;
                typedef DDS_DCPS_Array_forany< _int8_values_default_, _int8_values_default__slice, struct _int8_values_default__uniq_ > _int8_values_default__forany;
                static _int8_values_default__slice *_int8_values_default__alloc();
                static void _int8_values_default__free(_int8_values_default__slice *);
                static void _int8_values_default__copy(_int8_values_default__slice *to, const _int8_values_default__slice *from);
                static _int8_values_default__slice *_int8_values_default__dup(const _int8_values_default__slice *from);
                struct _uint8_values_default__uniq_{};
                typedef ::DDS::Octet _uint8_values_default__slice;
                typedef ::DDS::Octet _uint8_values_default_[3];
                typedef DDS_DCPS_FArray_var< _uint8_values_default_, _uint8_values_default__slice, struct _uint8_values_default__uniq_ > _uint8_values_default__var;
                typedef _uint8_values_default_ _uint8_values_default__out;
                typedef DDS_DCPS_Array_forany< _uint8_values_default_, _uint8_values_default__slice, struct _uint8_values_default__uniq_ > _uint8_values_default__forany;
                static _uint8_values_default__slice *_uint8_values_default__alloc();
                static void _uint8_values_default__free(_uint8_values_default__slice *);
                static void _uint8_values_default__copy(_uint8_values_default__slice *to, const _uint8_values_default__slice *from);
                static _uint8_values_default__slice *_uint8_values_default__dup(const _uint8_values_default__slice *from);
                struct _int16_values_default__uniq_{};
                typedef ::DDS::Short _int16_values_default__slice;
                typedef ::DDS::Short _int16_values_default_[3];
                typedef DDS_DCPS_FArray_var< _int16_values_default_, _int16_values_default__slice, struct _int16_values_default__uniq_ > _int16_values_default__var;
                typedef _int16_values_default_ _int16_values_default__out;
                typedef DDS_DCPS_Array_forany< _int16_values_default_, _int16_values_default__slice, struct _int16_values_default__uniq_ > _int16_values_default__forany;
                static _int16_values_default__slice *_int16_values_default__alloc();
                static void _int16_values_default__free(_int16_values_default__slice *);
                static void _int16_values_default__copy(_int16_values_default__slice *to, const _int16_values_default__slice *from);
                static _int16_values_default__slice *_int16_values_default__dup(const _int16_values_default__slice *from);
                struct _uint16_values_default__uniq_{};
                typedef ::DDS::UShort _uint16_values_default__slice;
                typedef ::DDS::UShort _uint16_values_default_[3];
                typedef DDS_DCPS_FArray_var< _uint16_values_default_, _uint16_values_default__slice, struct _uint16_values_default__uniq_ > _uint16_values_default__var;
                typedef _uint16_values_default_ _uint16_values_default__out;
                typedef DDS_DCPS_Array_forany< _uint16_values_default_, _uint16_values_default__slice, struct _uint16_values_default__uniq_ > _uint16_values_default__forany;
                static _uint16_values_default__slice *_uint16_values_default__alloc();
                static void _uint16_values_default__free(_uint16_values_default__slice *);
                static void _uint16_values_default__copy(_uint16_values_default__slice *to, const _uint16_values_default__slice *from);
                static _uint16_values_default__slice *_uint16_values_default__dup(const _uint16_values_default__slice *from);
                struct _int32_values_default__uniq_{};
                typedef ::DDS::Long _int32_values_default__slice;
                typedef ::DDS::Long _int32_values_default_[3];
                typedef DDS_DCPS_FArray_var< _int32_values_default_, _int32_values_default__slice, struct _int32_values_default__uniq_ > _int32_values_default__var;
                typedef _int32_values_default_ _int32_values_default__out;
                typedef DDS_DCPS_Array_forany< _int32_values_default_, _int32_values_default__slice, struct _int32_values_default__uniq_ > _int32_values_default__forany;
                static _int32_values_default__slice *_int32_values_default__alloc();
                static void _int32_values_default__free(_int32_values_default__slice *);
                static void _int32_values_default__copy(_int32_values_default__slice *to, const _int32_values_default__slice *from);
                static _int32_values_default__slice *_int32_values_default__dup(const _int32_values_default__slice *from);
                struct _uint32_values_default__uniq_{};
                typedef ::DDS::ULong _uint32_values_default__slice;
                typedef ::DDS::ULong _uint32_values_default_[3];
                typedef DDS_DCPS_FArray_var< _uint32_values_default_, _uint32_values_default__slice, struct _uint32_values_default__uniq_ > _uint32_values_default__var;
                typedef _uint32_values_default_ _uint32_values_default__out;
                typedef DDS_DCPS_Array_forany< _uint32_values_default_, _uint32_values_default__slice, struct _uint32_values_default__uniq_ > _uint32_values_default__forany;
                static _uint32_values_default__slice *_uint32_values_default__alloc();
                static void _uint32_values_default__free(_uint32_values_default__slice *);
                static void _uint32_values_default__copy(_uint32_values_default__slice *to, const _uint32_values_default__slice *from);
                static _uint32_values_default__slice *_uint32_values_default__dup(const _uint32_values_default__slice *from);
                struct _int64_values_default__uniq_{};
                typedef ::DDS::LongLong _int64_values_default__slice;
                typedef ::DDS::LongLong _int64_values_default_[3];
                typedef DDS_DCPS_FArray_var< _int64_values_default_, _int64_values_default__slice, struct _int64_values_default__uniq_ > _int64_values_default__var;
                typedef _int64_values_default_ _int64_values_default__out;
                typedef DDS_DCPS_Array_forany< _int64_values_default_, _int64_values_default__slice, struct _int64_values_default__uniq_ > _int64_values_default__forany;
                static _int64_values_default__slice *_int64_values_default__alloc();
                static void _int64_values_default__free(_int64_values_default__slice *);
                static void _int64_values_default__copy(_int64_values_default__slice *to, const _int64_values_default__slice *from);
                static _int64_values_default__slice *_int64_values_default__dup(const _int64_values_default__slice *from);
                struct _uint64_values_default__uniq_{};
                typedef ::DDS::ULongLong _uint64_values_default__slice;
                typedef ::DDS::ULongLong _uint64_values_default_[3];
                typedef DDS_DCPS_FArray_var< _uint64_values_default_, _uint64_values_default__slice, struct _uint64_values_default__uniq_ > _uint64_values_default__var;
                typedef _uint64_values_default_ _uint64_values_default__out;
                typedef DDS_DCPS_Array_forany< _uint64_values_default_, _uint64_values_default__slice, struct _uint64_values_default__uniq_ > _uint64_values_default__forany;
                static _uint64_values_default__slice *_uint64_values_default__alloc();
                static void _uint64_values_default__free(_uint64_values_default__slice *);
                static void _uint64_values_default__copy(_uint64_values_default__slice *to, const _uint64_values_default__slice *from);
                static _uint64_values_default__slice *_uint64_values_default__dup(const _uint64_values_default__slice *from);
                struct _string_values_default__uniq_{};
                typedef ::DDS::String_mgr _string_values_default__slice;
                typedef ::DDS::String_mgr _string_values_default_[3];
                typedef DDS_DCPS_VArray_var< _string_values_default_, _string_values_default__slice, struct _string_values_default__uniq_ > _string_values_default__var;
                typedef DDS_DCPS_VLArray_out< _string_values_default_, _string_values_default__slice, _string_values_default__var, struct _string_values_default__uniq_ > _string_values_default__out;
                typedef DDS_DCPS_Array_forany< _string_values_default_, _string_values_default__slice, struct _string_values_default__uniq_ > _string_values_default__forany;
                static _string_values_default__slice *_string_values_default__alloc();
                static void _string_values_default__free(_string_values_default__slice *);
                static void _string_values_default__copy(_string_values_default__slice *to, const _string_values_default__slice *from);
                static _string_values_default__slice *_string_values_default__dup(const _string_values_default__slice *from);
                _bool_values_ bool_values_;
                _byte_values_ byte_values_;
                _char_values_ char_values_;
                _float32_values_ float32_values_;
                _float64_values_ float64_values_;
                _int8_values_ int8_values_;
                _uint8_values_ uint8_values_;
                _int16_values_ int16_values_;
                _uint16_values_ uint16_values_;
                _int32_values_ int32_values_;
                _uint32_values_ uint32_values_;
                _int64_values_ int64_values_;
                _uint64_values_ uint64_values_;
                _string_values_ string_values_;
                _basic_types_values_ basic_types_values_;
                _constants_values_ constants_values_;
                _defaults_values_ defaults_values_;
                _bool_values_default_ bool_values_default_;
                _byte_values_default_ byte_values_default_;
                _char_values_default_ char_values_default_;
                _float32_values_default_ float32_values_default_;
                _float64_values_default_ float64_values_default_;
                _int8_values_default_ int8_values_default_;
                _uint8_values_default_ uint8_values_default_;
                _int16_values_default_ int16_values_default_;
                _uint16_values_default_ uint16_values_default_;
                _int32_values_default_ int32_values_default_;
                _uint32_values_default_ uint32_values_default_;
                _int64_values_default_ int64_values_default_;
                _uint64_values_default_ uint64_values_default_;
                _string_values_default_ string_values_default_;
                ::DDS::Long alignment_check_;
            };

            typedef DDS_DCPSStruct_var<Arrays_> Arrays__var;
            typedef DDS_DCPSStruct_out < Arrays_> Arrays__out;

        }

    }

}

#endif /* _H_5F4CBA7BA658AE9F94EB7A533816544A_Arrays__H_ */
